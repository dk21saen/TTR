#BlueJ class context
comment0.target=GameBoard
comment0.text=\r\n\ Main\ class\ for\ Ticket\ to\ Ride.\ This\ is\ wear\ the\ graphics\r\n\ takes\ place\ as\ well\ as\ gameplay\ for\ each\ player.\ \r\n\r\n\ @author\ Ashley\ Hughes,\ Justyn\ McHarg,\ Devante\ Saenger,\ \r\n\ Collin\ Adams,\ Dylan\ Lane\r\n\ \r\n\ @version\ Spring\ 2018\r\n
comment1.params=
comment1.target=GameBoard()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ DisplayImagePanel\r\n
comment10.params=player1\ player2\ player3
comment10.target=java.util.ArrayList\ tiebreak(Player,\ Player,\ Player)
comment10.text=\r\n\ If\ players\ are\ tied\ for\ the\ lead\ at\ the\ end\r\n\ of\ the\ game,\ destination\ tickets\ are\ compared\ between\ those\r\n\ players\ and\ the\ player\ with\ the\ most\ destintion\ tickets\r\n\ claimed\ wins\ the\ tiebreaker\ and\ Ticket\ to\ Ride.\r\n\ @param\ Player-\ player1(first\ player\ tied),\r\n\ player2(second\ player\ tied),\ player3(third\ player\ tied).\r\n\ @returns\ the\ Arraylist\ of\ the\ player\ that\ won\r\n\ or\ if\ still\ tied\ calls\ the\ second\ tie\ break\ method.\r\n
comment11.params=player1\ player2\ player3
comment11.target=java.util.ArrayList\ tiebreak2(Player,\ Player,\ Player)
comment11.text=\r\n\ If\ players\ are\ tied\ for\ the\ lead\ at\ the\ end\r\n\ of\ the\ game,\ meeples\ are\ compared\ between\ those\r\n\ players\ and\ the\ player\ with\ the\ most\ meeples\r\n\ claimed\ wins\ the\ tiebreaker\ and\ Ticket\ to\ Ride.\r\n\ @param\ Player-\ player1(first\ player\ tied),\r\n\ player2(second\ player\ tied),\ player3(third\ player\ tied).\r\n\ @returns\ the\ Arraylist\ of\ the\ player\ that\ won.\r\n
comment12.params=player1\ player2\ player3\ player4
comment12.target=java.util.ArrayList\ tiebreak(Player,\ Player,\ Player,\ Player)
comment12.text=\r\n\ If\ players\ are\ tied\ for\ the\ lead\ at\ the\ end\r\n\ of\ the\ game,\ destination\ tickets\ are\ compared\ between\ those\r\n\ players\ and\ the\ player\ with\ the\ most\ destintion\ tickets\r\n\ claimed\ wins\ the\ tiebreaker\ and\ Ticket\ to\ Ride.\r\n\ @param\ Player-\ player1(first\ player\ tied),\r\n\ player2(second\ player\ tied),\ player3(third\ player\ tied),\r\n\ player4(fourth\ player\ tied).\r\n\ @returns\ the\ Arraylist\ of\ the\ player\ that\ won\r\n\ or\ if\ still\ tied\ calls\ the\ second\ tie\ break\ method.\r\n
comment13.params=player1\ player2\ player3\ player4
comment13.target=java.util.ArrayList\ tiebreak2(Player,\ Player,\ Player,\ Player)
comment13.text=\r\n\ If\ players\ are\ tied\ for\ the\ lead\ at\ the\ end\r\n\ of\ the\ game,\ meeples\ are\ compared\ between\ those\r\n\ players\ and\ the\ player\ with\ the\ most\ meeples\r\n\ claimed\ wins\ the\ tiebreaker\ and\ Ticket\ to\ Ride.\r\n\ @param\ Player-\ player1(first\ player\ tied),\r\n\ player2(second\ player\ tied),\ player3(third\ player\ tied),\ \r\n\ player4(fourth\ player\ tied).\r\n\ @returns\ the\ Arraylist\ of\ the\ player\ that\ won.\r\n
comment14.params=player1\ player2\ player3\ player4\ player5
comment14.target=java.util.ArrayList\ tiebreak(Player,\ Player,\ Player,\ Player,\ Player)
comment14.text=\r\n\ If\ players\ are\ tied\ for\ the\ lead\ at\ the\ end\r\n\ of\ the\ game,\ destination\ tickets\ are\ compared\ between\ those\r\n\ players\ and\ the\ player\ with\ the\ most\ destintion\ tickets\r\n\ claimed\ wins\ the\ tiebreaker\ and\ Ticket\ to\ Ride.\r\n\ @param\ Player-\ player1(first\ player\ tied),\r\n\ player2(second\ player\ tied),\ player3(third\ player\ tied),\r\n\ player4(fourth\ player\ tied),\ player5(fifth\ player\ tied).\r\n\ @returns\ the\ Arraylist\ of\ the\ player\ that\ won\r\n\ or\ if\ still\ tied\ calls\ the\ second\ tie\ break\ method.\r\n
comment15.params=player1\ player2\ player3\ player4\ player5
comment15.target=java.util.ArrayList\ tiebreak2(Player,\ Player,\ Player,\ Player,\ Player)
comment15.text=\r\n\ If\ players\ are\ tied\ for\ the\ lead\ at\ the\ end\r\n\ of\ the\ game,\ meeples\ are\ compared\ between\ those\r\n\ players\ and\ the\ player\ with\ the\ most\ meeples\r\n\ claimed\ wins\ the\ tiebreaker\ and\ Ticket\ to\ Ride.\r\n\ @param\ Player-\ player1(first\ player\ tied),\r\n\ player2(second\ player\ tied),\ player3(third\ player\ tied),\ \r\n\ player4(fourth\ player\ tied),\ player5(fifth\ player\ tied).\r\n\ @returns\ the\ Arraylist\ of\ the\ player\ that\ won.\r\n
comment16.params=
comment16.target=Player\ nextPlayer()
comment16.text=\r\n\ Gets\ the\ next\ player.\r\n\ @return\ Player\ -\ next\ player.\ \r\n
comment17.params=event
comment17.target=void\ checkForHover(java.awt.event.MouseEvent)
comment17.text=\r\n\ Checks\ for\ the\ mouse\ to\ hover\ over\ the\ bounds\ of\ the\r\n\ name\ of\ the\ city.\r\n\ If\ so,\ the\ name\ of\ the\ city\ will\ appear\ on\ the\ board.\r\n\ @param\ MouseEvent-\ event\r\n
comment18.params=g
comment18.target=void\ paintComponent(java.awt.Graphics)
comment18.text=\r\n\ PaintComponent\ method\ for\ JPanel.\r\n\ \r\n\ @param\ \ g\ \ \ the\ Graphics\ object\ for\ this\ applet\r\n
comment19.params=
comment19.target=void\ createAndShowGUI()
comment19.text=\r\n\ Creates\ the\ Jframe\ and\ panel\ so\ everything\ will\r\n\ appear\ on\ the\ GameBoard.\r\n
comment2.params=event
comment2.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment20.params=args
comment20.target=void\ main(java.lang.String[])
comment20.text=\r\n\ Main\ method\ for\ Gameboard.\r\n\ @param\ String[]\ -\ args\r\n
comment21.params=
comment21.target=void\ run()
comment3.params=event
comment3.target=void\ mouseExited(java.awt.event.MouseEvent)
comment4.params=e
comment4.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment4.text=\r\n\ This\ method\ uses\ the\ mouse\ event\ for\ when\r\n\ a\ player\ is\ claiming\ a\ particular\ route\r\n\ and\ clicks\ on\ one\ end\ of\ the\ \r\n\ route(starting\ city)\ and\ the\ other\r\n\ end\ of\ the\ route(ending\ city).\ \r\n\ @param\ MouseEvent\ e\r\n
comment5.params=event
comment5.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment6.params=event
comment6.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment7.params=
comment7.target=void\ endGame()
comment7.text=\r\n\ This\ method\ calculates\ each\ player's\ score\ based\ on\r\n\ meeples\ claimed,\ routes\ claimed,\ completed\ \r\n\ destination\ tickets\ and\ the\ globeTrotter\ bonus\r\n\ and\ determines\ the\ winner\ for\ Ticket\ to\ Ride.\r\n
comment8.params=player1\ player2
comment8.target=java.util.ArrayList\ tiebreak(Player,\ Player)
comment8.text=\r\n\ If\ players\ are\ tied\ for\ the\ lead\ at\ the\ end\r\n\ of\ the\ game,\ destination\ tickets\ are\ compared\ between\ those\r\n\ players\ and\ the\ player\ with\ the\ most\ destintion\ tickets\r\n\ claimed\ wins\ the\ tiebreaker\ and\ Ticket\ to\ Ride.\r\n\ @param\ Player-\ player1(first\ player\ tied),\r\n\ player2(second\ player\ tied)\r\n\ @returns\ the\ Arraylist\ of\ the\ player\ that\ won\r\n\ or\ if\ still\ tied\ calls\ the\ second\ tie\ break\ method\r\n
comment9.params=player1\ player2
comment9.target=java.util.ArrayList\ tiebreak2(Player,\ Player)
comment9.text=\r\n\ If\ players\ are\ tied\ for\ the\ lead\ at\ the\ end\r\n\ of\ the\ game,\ meeples\ are\ compared\ between\ those\r\n\ players\ and\ the\ player\ with\ the\ most\ meeples\r\n\ claimed\ wins\ the\ tiebreaker\ and\ Ticket\ to\ Ride.\r\n\ @param\ Player-\ player1(first\ player\ tied),\r\n\ player2(second\ player\ tied)\r\n\ @returns\ the\ Arraylist\ of\ the\ player\ that\ won\r\n
numComments=22
